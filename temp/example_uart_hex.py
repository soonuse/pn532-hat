"""
Simplest example for UART test.
"""
import binascii
import threading
import time
import serial


def uart_read(uart):
    """UART read"""
    while True:
        result = uart.read(uart.in_waiting)
        if result:
            print('r:', ' '.join([('%02X' % i) for i in result]))
        time.sleep(0.05)


def uart_write(uart):
    """UART write"""
    while True:
        content = input()
        content = content.replace(' ', '').replace('0x', '').replace(',', '')
        content = binascii.unhexlify(content)
        if content:
            print('w:', ' '.join([('%02X' % i) for i in content]))
        uart.write(content)
        time.sleep(0.05)


def uart_write(uart, content):
    print('w:', ' '.join([('%02X' % i) for i in content]))
    uart.write(content)


if __name__ == '__main__':
    print('''
Usage:
Send hex values on UART, e.g. input
    55 55 00 00 00 00 00 00 00 00 00 00 00 00 00 00 FF 03 FD D4 14 01 17 00
followed by Enter
''')
    print('Press Ctrl+C to quit')
    uart = serial.Serial('/dev/ttyS0', 115200)
    if not uart.is_open:
        print('serial0 is not enabled')
        exit(-1)
    ts = []
    ts.append(threading.Thread(target=uart_read, args=(uart,), daemon=True))
    for t in ts:
        t.start()
    TIMEOUT = 0.3
    uart_write(uart, [0x55, 0x55, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x03, 0xFD, 0xD4, 0x14, 0x01, 0x17, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x03, 0xfd, 0xd4, 0x14, 0x01, 0x17, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x09, 0xf7, 0xd4, 0x00, 0x00, 0x6c, 0x69, 0x62, 0x6e, 0x66, 0x63, 0xbe, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x02, 0xfe, 0xd4, 0x02, 0x2a, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x03, 0xfd, 0xd4, 0x12, 0x14, 0x06, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x0c, 0xf4, 0xd4, 0x06, 0x63, 0x02, 0x63, 0x03, 0x63, 0x0d, 0x63, 0x38, 0x63, 0x3d, 0xb0, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x08, 0xf8, 0xd4, 0x08, 0x63, 0x02, 0x80, 0x63, 0x03, 0x80, 0x59, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x04, 0xfc, 0xd4, 0x32, 0x01, 0x00, 0xf9, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x04, 0xfc, 0xd4, 0x32, 0x01, 0x01, 0xf8, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x06, 0xfa, 0xd4, 0x32, 0x05, 0xff, 0xff, 0xff, 0xf8, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x0c, 0xf4, 0xd4, 0x06, 0x63, 0x02, 0x63, 0x05, 0x63, 0x38, 0x63, 0x3c, 0x63, 0x3d, 0x7f, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x0e, 0xf2, 0xd4, 0x08, 0x63, 0x02, 0x00, 0x63, 0x03, 0x00, 0x63, 0x05, 0x40, 0x63, 0x3c, 0x10, 0x02, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x03, 0xfd, 0xd4, 0x12, 0x04, 0x16, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x04, 0xfc, 0xd4, 0x06, 0x63, 0x3d, 0x86, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x05, 0xfb, 0xd4, 0x08, 0x63, 0x3d, 0x07, 0x7d, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x03, 0xfd, 0xd4, 0x42, 0x26, 0xc4, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x04, 0xfc, 0xd4, 0x06, 0x63, 0x3c, 0x87, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x04, 0xfc, 0xd4, 0x06, 0x63, 0x3d, 0x86, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x05, 0xfb, 0xd4, 0x08, 0x63, 0x3d, 0x00, 0x84, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x04, 0xfc, 0xd4, 0x42, 0x93, 0x20, 0x37, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x0b, 0xf5, 0xd4, 0x42, 0x93, 0x70, 0x00, 0x01, 0x02, 0x03, 0x04, 0xd3, 0x1c, 0xee, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x06, 0xfa, 0xd4, 0x42, 0x50, 0x00, 0x57, 0xcd, 0x76, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x04, 0xfc, 0xd4, 0x06, 0x63, 0x3d, 0x86, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x05, 0xfb, 0xd4, 0x08, 0x63, 0x3d, 0x07, 0x7d, 0x00])
    time.sleep(TIMEOUT)
    uart_write(uart, [00, 0x00, 0xff, 0x03, 0xfd, 0xd4, 0x42, 0x40, 0xaa, 0x00])
    time.sleep(TIMEOUT)
